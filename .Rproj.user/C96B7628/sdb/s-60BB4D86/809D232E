{
    "collab_server" : "",
    "contents" : "#' rfm_model fucntion\n#'\n#' Load data in to create model\n#'\n#' @param df a data frame loaded with rfm_load or created previously\n#' @param n_freq an integer between 2 and 5 representing the number of quantile to create for the frequency\n#' @param n_rec an integer between 2 and 5 representing the number of quantile to create for the recency\n#' @param n_mon an interget between 2 and 5 representing the number of quantile to create for the monetary score\n#' @param score a logical default is TRUE which add a concatenated rfm score as a variable in the return object. If FALSE then the score will not be added\n#'\n#'\n#' @return a Data.frame object\n#'\n#'\n#' @export\n\n\nrfm <- function(df,\n                n_freq = c(2:5),\n                n_rec = c(2:5),\n                n_mon = c(2:5),\n                score = TRUE) {\n\n\n  #Checks------------------------------------------------------------------\n\n  if (is.data.frame(df)) {\n    print('Starting the customers segmentation')\n  } else {\n    print('df needs to be a data frame')\n  }\n\n  if (n_freq <2 | n_freq>5 ){\n    print('n_freq needs to be between 2 and 5')\n  }\n\n  if (n_rec <2 | n_rec>5 ){\n    print('n_rec needs to be between 2 and 5')\n  }\n\n  if (n_mon <2 | n_mon>5 ){\n    print('n_mon needs to be between 2 and 5')\n  }\n\n  #build quantile------------------------------------------------------------------\n\n  if (n_freq == 2){\n    f <- quantile(df$frequency, c(0.5))\n  } else if (n_freq == 3){\n    f <- quantile(df$frequency, c(0.33,0.66,1))\n  } else if (n_freq == 4){\n    f <- quantile(df$frequency, c(0.25,0.5,0.75,1))\n  } else if (n_freq == 5){\n    f<- quantile(df$frequency, c(0.2,0.4,0.6,0.8,1))\n  }\n\n\n  if (n_rec == 2){\n    r <- quantile(df$recency, c(0.5))\n  } else if (n_rec == 3){\n    r <- quantile(df$recency, c(0.33,0.66,1))\n  } else if (n_rec == 4){\n    r <- quantile(df$recency, c(0.25,0.5,0.75,1))\n  } else if (n_rec == 5){\n    r<- quantile(df$recency, c(0.2,0.4,0.6,0.8,1))\n  }\n\n\n  if (n_mon == 2){\n    m <- quantile(df$monetary, c(0.5))\n  } else if (n_mon == 3){\n    m <- quantile(df$monetary, c(0.33,0.66,1))\n  } else if (n_mon == 4){\n    m <- quantile(df$monetary, c(0.25,0.5,0.75,1))\n  } else if (n_mon == 5){\n    m<- quantile(df$monetary, c(0.2,0.4,0.6,0.8,1))\n  }\n\n\n  #create segment ------------------------------------------------------------------\n## frequency\n  if (n_freq == 2){\n\n    df$Fr <- ifelse(df$frequency<f[1],2,1)\n\n\n  } else if (n_freq == 3){\n\n    df$Fr <- ifelse(df$frequency<f[1],3,\n                    ifelse(df$frequency>=f[1] & df$frequency<f[2],2,1))\n\n  } else if (n_freq == 4){\n\n    df$Fr <- ifelse(df$frequency<f[1],4,\n                    ifelse(df$frequency>=f[1] & df$frequency<f[2],3,\n                           ifelse(df$frequency>=f[2] & df$frequency<f[3],2,1)))\n  } else if (n_freq == 5){\n\n    df$Fr <- ifelse(df$frequency<f[1],5,\n                    ifelse(df$frequency>=f[1] & df$frequency<f[2],4,\n                           ifelse(df$frequency>=f[2] & df$frequency<f[3],3,\n                                  ifelse(df$frequency>=f[3] & df$frequency<f[4],2,1))))\n  }\n\n##recency\n  if (n_rec == 2){\n\n    df$Re <- ifelse(df$recency<r[1],1,2)\n\n\n  } else  if (n_rec == 3){\n\n    df$Re <- ifelse(df$recency<r[1],1,\n                    ifelse(df$recency>=r[1] & df$recency<r[2],2,3))\n\n  } else if (n_rec == 4){\n\n    df$Re <- ifelse(df$recency<r[1],1,\n                    ifelse(df$recency>=r[1] & df$recency<r[2],2,\n                           ifelse(df$recency>=r[2] & df$recency<r[3],3,4)))\n  } else if (n_rec == 5){\n\n    df$Re <- ifelse(df$recency<r[1],1,\n                    ifelse(df$recency>=r[1] & df$recency<r[2],2,\n                           ifelse(df$recency>=r[2] & df$recency<r[3],3,\n                                  ifelse(df$recency>=r[3] & df$recency<r[4],4,5))))\n  }\n\n##Monetary\n    if (n_mon == 2){\n\n      df$Mo <- ifelse(df$monetary<m[1],2,1)\n\n\n    } else if (n_mon == 3){\n\n      df$Mo <- ifelse(df$monetary<m[1],3,\n                      ifelse(df$monetary>=m[1] & df$monetary<m[2],2,1))\n\n    } else if (n_mon == 4){\n\n      df$Mo <- ifelse(df$monetary<m[1],4,\n                      ifelse(df$monetary>=m[1] & df$monetary<m[2],3,\n                             ifelse(df$monetary>=m[2] & df$monetary<m[3],2,1)))\n    } else if (n_mon == 5){\n\n      df$Mo <- ifelse(df$monetary<m[1],5,\n                      ifelse(df$monetary>=m[1] & df$monetary<m[2],4,\n                             ifelse(df$monetary>=m[2] & df$monetary<m[3],3,\n                                    ifelse(df$monetary>=m[3] & df$monetary<m[4],2,1))))\n    }\n\n  df$Re <- as.factor(df$Re)\n  df$Mo <- as.factor(df$Mo)\n  df$Fr <- as.factor(df$Fr)\n\n  if(score == TRUE){\n    df$score <- paste(df$Re,df$Fr,df$Mo, sep = '')\n  } else {\n    print('no score will be created')\n  }\n\n  return(df)\n\n}\n",
    "created" : 1484211414152.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "885023876",
    "id" : "809D232E",
    "lastKnownWriteTime" : 1484224647,
    "last_content_update" : 1484224647226,
    "path" : "//wdmpsvr01/RedirectedFolders/clemence.burnichon/My Documents/code_repo/rfm/R/rfm.R",
    "project_path" : "R/rfm.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : true,
    "source_window" : "",
    "type" : "r_source"
}